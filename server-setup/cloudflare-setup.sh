#!/bin/bash

# Cloudflare + openSUSE Leap SSLË®≠ÂÆö„Çπ„ÇØ„É™„Éó„Éà
# aivis-chan-bot.com „Éâ„É°„Ç§„É≥Áî®

set -e

# Ëâ≤‰ªò„Åç„É°„ÉÉ„Çª„Éº„Ç∏Áî®„ÅÆÈñ¢Êï∞
print_message() {
    echo -e "\033[1;32m[INFO]\033[0m $1"
}

print_warning() {
    echo -e "\033[1;33m[WARNING]\033[0m $1"
}

print_error() {
    echo -e "\033[1;31m[ERROR]\033[0m $1"
}

print_success() {
    echo -e "\033[1;42m[SUCCESS]\033[0m $1"
}

# Ë®≠ÂÆöÂ§âÊï∞
DOMAIN="aivis-chan-bot.com"
EMAIL="admin@aivis-chan-bot.com"
SUBDOMAIN="status" # status.aivis-chan-bot.com „ÅßË®≠ÂÆö

# root„É¶„Éº„Ç∂„Éº„ÉÅ„Çß„ÉÉ„ÇØ
if [ "$EUID" -ne 0 ]; then
    print_error "„Åì„ÅÆ„Çπ„ÇØ„É™„Éó„Éà„ÅØrootÊ®©Èôê„ÅßÂÆüË°å„Åó„Å¶„Åè„Å†„Åï„ÅÑ"
    echo "‰ΩøÁî®ÊñπÊ≥ï: sudo $0"
    exit 1
fi

print_message "üåê Cloudflare + openSUSE Leap SSLË®≠ÂÆöÈñãÂßã"
print_message "„Éâ„É°„Ç§„É≥: $DOMAIN"
print_message "„Çµ„Éñ„Éâ„É°„Ç§„É≥: $SUBDOMAIN.$DOMAIN"

# ‰∫ãÂâçÁ¢∫Ë™ç
echo "Ë®≠ÂÆöÂâç„ÅÆÁ¢∫Ë™ç‰∫ãÈ†Ö:"
echo "1. Cloudflare„Åß„Éâ„É°„Ç§„É≥„ÅåËøΩÂä†Ê∏à„Åø„ÅãÔºü"
echo "2. DNS„É¨„Ç≥„Éº„Éâ„Åß„Çµ„Éº„Éê„ÉºIP„ÅåË®≠ÂÆöÊ∏à„Åø„ÅãÔºü"
echo "3. Cloudflare„Éó„É≠„Ç≠„Ç∑Ôºà„Ç™„É¨„É≥„Ç∏Èõ≤Ôºâ„ÅØÁÑ°Âäπ„Å´„Å™„Å£„Å¶„ÅÑ„Çã„ÅãÔºü"
echo
read -p "„Åô„Åπ„Å¶Á¢∫Ë™çÊ∏à„Åø„Åß„Åô„ÅãÔºü (y/N): " -n 1 -r
echo
if [[ ! $REPLY =~ ^[Yy]$ ]]; then
    print_warning "Cloudflare„ÅÆË®≠ÂÆö„ÇíÂÖà„Å´ÂÆå‰∫Ü„Åó„Å¶„Åè„Å†„Åï„ÅÑ"
    exit 0
fi

# ÂøÖË¶Å„Å™„Éë„ÉÉ„Ç±„Éº„Ç∏„ÅÆ„Ç§„É≥„Çπ„Éà„Éº„É´
print_message "üì¶ ÂøÖË¶Å„Å™„Éë„ÉÉ„Ç±„Éº„Ç∏„Çí„Ç§„É≥„Çπ„Éà„Éº„É´‰∏≠..."
zypper refresh >/dev/null 2>&1
zypper install -y certbot python3-certbot-apache python3-certbot-dns-cloudflare >/dev/null 2>&1

# Cloudflare APIË®≠ÂÆö
setup_cloudflare_credentials() {
    print_message "üîë Cloudflare APIË™çË®ºÊÉÖÂ†±„ÇíË®≠ÂÆö„Åó„Åæ„Åô"
    
    echo "Cloudflare API TokenÔºàÊé®Â•®Ôºâ„Åæ„Åü„ÅØGlobal API Key„ÅåÂøÖË¶Å„Åß„Åô"
    echo "API Token„ÅÆÂèñÂæóÊñπÊ≥ï:"
    echo "1. Cloudflare„ÉÄ„ÉÉ„Ç∑„É•„Éú„Éº„Éâ ‚Üí My Profile ‚Üí API Tokens"
    echo "2. 'Create Token' ‚Üí 'Custom token'"
    echo "3. Permissions: Zone:Zone:Read, Zone:DNS:Edit"
    echo "4. Zone Resources: Include - Specific zone - aivis-chan-bot.com"
    echo
    
    read -p "API Token/Global API Key„ÇíÂÖ•Âäõ„Åó„Å¶„Åè„Å†„Åï„ÅÑ: " -s CLOUDFLARE_TOKEN
    echo
    
    if [ -z "$CLOUDFLARE_TOKEN" ]; then
        print_error "API Token/Key„ÅåÂÖ•Âäõ„Åï„Çå„Å¶„ÅÑ„Åæ„Åõ„Çì"
        exit 1
    fi
    
    # CloudflareË™çË®ºÊÉÖÂ†±„Éï„Ç°„Ç§„É´‰ΩúÊàê
    mkdir -p /etc/letsencrypt
    cat > /etc/letsencrypt/cloudflare.ini << EOF
# Cloudflare API Token (Êé®Â•®)
dns_cloudflare_api_token = $CLOUDFLARE_TOKEN

# „Åæ„Åü„ÅØ Global API Key „Çí‰ΩøÁî®„Åô„ÇãÂ†¥Âêà:
# dns_cloudflare_email = your-email@example.com
# dns_cloudflare_api_key = your-global-api-key
EOF
    
    chmod 600 /etc/letsencrypt/cloudflare.ini
    print_success "CloudflareË™çË®ºÊÉÖÂ†±„ÇíË®≠ÂÆö„Åó„Åæ„Åó„Åü"
}

# Apache VirtualHostË®≠ÂÆö
setup_apache_virtualhost() {
    print_message "üåê Apache VirtualHostË®≠ÂÆö‰∏≠..."
    
    # „É°„Ç§„É≥„Éâ„É°„Ç§„É≥Áî®Ë®≠ÂÆö
    cat > "/etc/apache2/sites-available/$DOMAIN.conf" << EOF
<VirtualHost *:80>
    ServerName $DOMAIN
    ServerAlias www.$DOMAIN
    DocumentRoot /srv/www/htdocs/$DOMAIN
    
    # „É≠„Ç∞Ë®≠ÂÆö
    ErrorLog /var/log/apache2/$DOMAIN-error.log
    CustomLog /var/log/apache2/$DOMAIN-access.log combined
    
    # Let's Encrypt„ÅÆË™çË®ºÁî®
    Alias /.well-known/acme-challenge/ /srv/www/htdocs/.well-known/acme-challenge/
    <Directory "/srv/www/htdocs/.well-known">
        AllowOverride None
        Require all granted
    </Directory>
</VirtualHost>
EOF

    # „Çπ„ÉÜ„Éº„Çø„Çπ„Éö„Éº„Ç∏Áî®„Çµ„Éñ„Éâ„É°„Ç§„É≥Ë®≠ÂÆö
    cat > "/etc/apache2/sites-available/$SUBDOMAIN.$DOMAIN.conf" << EOF
<VirtualHost *:80>
    ServerName $SUBDOMAIN.$DOMAIN
    DocumentRoot /srv/www/htdocs/$SUBDOMAIN
    
    # CORSË®≠ÂÆöÔºàAPIÊé•Á∂öÁî®Ôºâ
    Header set Access-Control-Allow-Origin "*"
    Header set Access-Control-Allow-Methods "GET, POST, OPTIONS"
    Header set Access-Control-Allow-Headers "Content-Type, Authorization"
    
    # „É≠„Ç∞Ë®≠ÂÆö
    ErrorLog /var/log/apache2/$SUBDOMAIN.$DOMAIN-error.log
    CustomLog /var/log/apache2/$SUBDOMAIN.$DOMAIN-access.log combined
    
    # Let's Encrypt„ÅÆË™çË®ºÁî®
    Alias /.well-known/acme-challenge/ /srv/www/htdocs/.well-known/acme-challenge/
    <Directory "/srv/www/htdocs/.well-known">
        AllowOverride None
        Require all granted
    </Directory>
</VirtualHost>
EOF

    # „Éá„Ç£„É¨„ÇØ„Éà„É™‰ΩúÊàê
    mkdir -p "/srv/www/htdocs/$DOMAIN"
    mkdir -p "/srv/www/htdocs/$SUBDOMAIN"
    mkdir -p "/srv/www/htdocs/.well-known/acme-challenge"
    
    # „Çµ„Ç§„ÉàÊúâÂäπÂåñ
    a2ensite "$DOMAIN"
    a2ensite "$SUBDOMAIN.$DOMAIN"
    a2enmod headers rewrite
    
    systemctl reload apache2
    print_success "Apache VirtualHostË®≠ÂÆöÂÆå‰∫Ü"
}

# „Éï„Ç°„Ç§„É´ÈÖçÁΩÆ
deploy_website_files() {
    print_message "üìÅ Web„Çµ„Ç§„Éà„Éï„Ç°„Ç§„É´„ÇíÈÖçÁΩÆ‰∏≠..."
    
    # „Çπ„ÉÜ„Éº„Çø„Çπ„Éö„Éº„Ç∏„Éï„Ç°„Ç§„É´ÈÖçÁΩÆ
    if [ -d "/home/$(logname)/Aivis-chan-bot-web" ]; then
        SOURCE_DIR="/home/$(logname)/Aivis-chan-bot-web"
    elif [ -d "/tmp/Aivis-chan-bot-web" ]; then
        SOURCE_DIR="/tmp/Aivis-chan-bot-web"
    else
        print_warning "Web„Çµ„Ç§„Éà„Éï„Ç°„Ç§„É´„ÅåË¶ã„Å§„Åã„Çä„Åæ„Åõ„Çì"
        print_message "ÊâãÂãï„Åß„Éï„Ç°„Ç§„É´„ÇíÈÖçÁΩÆ„Åó„Å¶„Åè„Å†„Åï„ÅÑ:"
        print_message "cp -r /path/to/Aivis-chan-bot-web/* /srv/www/htdocs/$SUBDOMAIN/"
        return
    fi
    
    # „Éï„Ç°„Ç§„É´„Ç≥„Éî„Éº
    cp -r "$SOURCE_DIR"/* "/srv/www/htdocs/$SUBDOMAIN/"
    chown -R wwwrun:www "/srv/www/htdocs/$SUBDOMAIN"
    chmod -R 644 "/srv/www/htdocs/$SUBDOMAIN"
    find "/srv/www/htdocs/$SUBDOMAIN" -type d -exec chmod 755 {} \;
    
    # „É°„Ç§„É≥„Éâ„É°„Ç§„É≥Áî®„Ç∑„É≥„Éó„É´„Éö„Éº„Ç∏
    cat > "/srv/www/htdocs/$DOMAIN/index.html" << EOF
<!DOCTYPE html>
<html lang="ja">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Aivis-chan Bot</title>
    <style>
        body { font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif; margin: 0; padding: 0; background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); min-height: 100vh; display: flex; align-items: center; justify-content: center; }
        .container { text-align: center; color: white; }
        h1 { font-size: 3rem; margin-bottom: 1rem; }
        p { font-size: 1.2rem; margin-bottom: 2rem; }
        .btn { display: inline-block; padding: 12px 24px; background: rgba(255,255,255,0.2); color: white; text-decoration: none; border-radius: 25px; border: 2px solid rgba(255,255,255,0.3); transition: all 0.3s; }
        .btn:hover { background: rgba(255,255,255,0.3); }
    </style>
</head>
<body>
    <div class="container">
        <h1>ü§ñ Aivis-chan Bot</h1>
        <p>DiscordÈü≥Â£∞ÂêàÊàê„Éú„ÉÉ„Éà„Çµ„Éº„Éì„Çπ</p>
        <a href="https://$SUBDOMAIN.$DOMAIN" class="btn">„Çπ„ÉÜ„Éº„Çø„Çπ„Éö„Éº„Ç∏ ‚Üí</a>
    </div>
</body>
</html>
EOF
    
    chown wwwrun:www "/srv/www/htdocs/$DOMAIN/index.html"
    print_success "Web„Çµ„Ç§„Éà„Éï„Ç°„Ç§„É´ÈÖçÁΩÆÂÆå‰∫Ü"
}

# SSLË®ºÊòéÊõ∏ÂèñÂæóÔºàCloudflare DNSË™çË®ºÔºâ
obtain_ssl_certificate() {
    print_message "üîí SSLË®ºÊòéÊõ∏„ÇíÂèñÂæó‰∏≠ÔºàCloudflare DNSË™çË®ºÔºâ..."
    
    # Cloudflare DNSË™çË®º„Åß„ÉØ„Ç§„É´„Éâ„Ç´„Éº„ÉâË®ºÊòéÊõ∏ÂèñÂæó
    certbot certonly \
        --dns-cloudflare \
        --dns-cloudflare-credentials /etc/letsencrypt/cloudflare.ini \
        --dns-cloudflare-propagation-seconds 60 \
        --non-interactive \
        --agree-tos \
        --email "$EMAIL" \
        --domains "$DOMAIN,*.$DOMAIN"
    
    if [ $? -eq 0 ]; then
        print_success "SSLË®ºÊòéÊõ∏ÂèñÂæóÊàêÂäü"
    else
        print_error "SSLË®ºÊòéÊõ∏ÂèñÂæóÂ§±Êïó"
        exit 1
    fi
}

# Apache SSLË®≠ÂÆö
configure_apache_ssl() {
    print_message "üõ°Ô∏è  Apache SSLË®≠ÂÆö‰∏≠..."
    
    # SSL „É¢„Ç∏„É•„Éº„É´ÊúâÂäπÂåñ
    a2enmod ssl
    
    # „É°„Ç§„É≥„Éâ„É°„Ç§„É≥SSLË®≠ÂÆö
    cat > "/etc/apache2/sites-available/$DOMAIN-ssl.conf" << EOF
<VirtualHost *:443>
    ServerName $DOMAIN
    ServerAlias www.$DOMAIN
    DocumentRoot /srv/www/htdocs/$DOMAIN
    
    # SSLË®≠ÂÆö
    SSLEngine on
    SSLCertificateFile /etc/letsencrypt/live/$DOMAIN/fullchain.pem
    SSLCertificateKeyFile /etc/letsencrypt/live/$DOMAIN/privkey.pem
    
    # Âº∑Âäõ„Å™SSLË®≠ÂÆö
    SSLProtocol all -SSLv3 -TLSv1 -TLSv1.1
    SSLCipherSuite ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384
    SSLHonorCipherOrder off
    SSLSessionTickets off
    
    # „Çª„Ç≠„É•„É™„ÉÜ„Ç£„Éò„ÉÉ„ÉÄ„Éº
    Header always set Strict-Transport-Security "max-age=31536000; includeSubDomains; preload"
    Header always set X-Frame-Options DENY
    Header always set X-Content-Type-Options nosniff
    Header always set Referrer-Policy "strict-origin-when-cross-origin"
    
    # „É≠„Ç∞Ë®≠ÂÆö
    ErrorLog /var/log/apache2/$DOMAIN-ssl-error.log
    CustomLog /var/log/apache2/$DOMAIN-ssl-access.log combined
</VirtualHost>
EOF

    # „Çπ„ÉÜ„Éº„Çø„Çπ„Éö„Éº„Ç∏SSLË®≠ÂÆö
    cat > "/etc/apache2/sites-available/$SUBDOMAIN.$DOMAIN-ssl.conf" << EOF
<VirtualHost *:443>
    ServerName $SUBDOMAIN.$DOMAIN
    DocumentRoot /srv/www/htdocs/$SUBDOMAIN
    
    # SSLË®≠ÂÆö
    SSLEngine on
    SSLCertificateFile /etc/letsencrypt/live/$DOMAIN/fullchain.pem
    SSLCertificateKeyFile /etc/letsencrypt/live/$DOMAIN/privkey.pem
    
    # Âº∑Âäõ„Å™SSLË®≠ÂÆö
    SSLProtocol all -SSLv3 -TLSv1 -TLSv1.1
    SSLCipherSuite ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384
    SSLHonorCipherOrder off
    SSLSessionTickets off
    
    # „Çª„Ç≠„É•„É™„ÉÜ„Ç£„Éò„ÉÉ„ÉÄ„Éº
    Header always set Strict-Transport-Security "max-age=31536000; includeSubDomains; preload"
    Header always set X-Frame-Options DENY
    Header always set X-Content-Type-Options nosniff
    Header always set Referrer-Policy "strict-origin-when-cross-origin"
    
    # CORSË®≠ÂÆöÔºàAPIÊé•Á∂öÁî®Ôºâ
    Header set Access-Control-Allow-Origin "*"
    Header set Access-Control-Allow-Methods "GET, POST, OPTIONS"
    Header set Access-Control-Allow-Headers "Content-Type, Authorization"
    
    # „É≠„Ç∞Ë®≠ÂÆö
    ErrorLog /var/log/apache2/$SUBDOMAIN.$DOMAIN-ssl-error.log
    CustomLog /var/log/apache2/$SUBDOMAIN.$DOMAIN-ssl-access.log combined
</VirtualHost>
EOF

    # HTTP„Åã„ÇâHTTPS„Å∏„ÅÆ„É™„ÉÄ„Ç§„É¨„ÇØ„ÉàË®≠ÂÆö
    cat > "/etc/apache2/sites-available/redirect-ssl.conf" << EOF
<VirtualHost *:80>
    ServerName $DOMAIN
    ServerAlias www.$DOMAIN $SUBDOMAIN.$DOMAIN
    Redirect permanent / https://$DOMAIN/
</VirtualHost>
EOF

    # SSL „Çµ„Ç§„ÉàÊúâÂäπÂåñ
    a2ensite "$DOMAIN-ssl"
    a2ensite "$SUBDOMAIN.$DOMAIN-ssl"
    a2ensite "redirect-ssl"
    
    # ÂÖÉ„ÅÆHTTP„Çµ„Ç§„ÉàÁÑ°ÂäπÂåñ
    a2dissite "$DOMAIN"
    a2dissite "$SUBDOMAIN.$DOMAIN"
    
    systemctl reload apache2
    print_success "Apache SSLË®≠ÂÆöÂÆå‰∫Ü"
}

# „Éï„Ç°„Ç§„Ç¢„Ç¶„Ç©„Éº„É´Ë®≠ÂÆö
configure_firewall() {
    print_message "üî• „Éï„Ç°„Ç§„Ç¢„Ç¶„Ç©„Éº„É´Ë®≠ÂÆö‰∏≠..."
    
    if systemctl is-active --quiet firewalld; then
        firewall-cmd --permanent --add-service=http
        firewall-cmd --permanent --add-service=https
        firewall-cmd --reload
        print_success "firewalldË®≠ÂÆöÂÆå‰∫Ü"
    elif command -v ufw >/dev/null; then
        ufw allow 'Apache Full'
        print_success "ufwË®≠ÂÆöÂÆå‰∫Ü"
    else
        print_warning "„Éï„Ç°„Ç§„Ç¢„Ç¶„Ç©„Éº„É´„ÅåË¶ã„Å§„Åã„Çä„Åæ„Åõ„Çì - ÊâãÂãï„Åß„Éù„Éº„Éà80/443„ÇíÈñãÊîæ„Åó„Å¶„Åè„Å†„Åï„ÅÑ"
    fi
}

# Ëá™ÂãïÊõ¥Êñ∞Ë®≠ÂÆö
setup_auto_renewal() {
    print_message "‚è∞ SSLË®ºÊòéÊõ∏Ëá™ÂãïÊõ¥Êñ∞Ë®≠ÂÆö‰∏≠..."
    
    # cronË®≠ÂÆö
    if ! crontab -l 2>/dev/null | grep -q "certbot renew"; then
        (crontab -l 2>/dev/null; echo "0 3 * * * /usr/bin/certbot renew --quiet && systemctl reload apache2") | crontab -
        print_success "cronËá™ÂãïÊõ¥Êñ∞Ë®≠ÂÆöÂÆå‰∫Ü"
    else
        print_message "Ëá™ÂãïÊõ¥Êñ∞„ÅØÊó¢„Å´Ë®≠ÂÆöÊ∏à„Åø„Åß„Åô"
    fi
}

# Êé•Á∂ö„ÉÜ„Çπ„Éà
test_connections() {
    print_message "üß™ Êé•Á∂ö„ÉÜ„Çπ„ÉàÂÆüË°å‰∏≠..."
    
    sleep 5 # DNS‰ºùÊí≠ÂæÖ„Å°
    
    # HTTPSÊé•Á∂ö„ÉÜ„Çπ„Éà
    if curl -s --max-time 10 "https://$DOMAIN" >/dev/null 2>&1; then
        print_success "‚úÖ „É°„Ç§„É≥„Çµ„Ç§„Éà HTTPSÊé•Á∂öÊàêÂäü: https://$DOMAIN"
    else
        print_warning "‚ùå „É°„Ç§„É≥„Çµ„Ç§„Éà HTTPSÊé•Á∂öÂ§±Êïó"
    fi
    
    if curl -s --max-time 10 "https://$SUBDOMAIN.$DOMAIN" >/dev/null 2>&1; then
        print_success "‚úÖ „Çπ„ÉÜ„Éº„Çø„Çπ„Éö„Éº„Ç∏ HTTPSÊé•Á∂öÊàêÂäü: https://$SUBDOMAIN.$DOMAIN"
    else
        print_warning "‚ùå „Çπ„ÉÜ„Éº„Çø„Çπ„Éö„Éº„Ç∏ HTTPSÊé•Á∂öÂ§±Êïó"
    fi
    
    # SSLË®ºÊòéÊõ∏Á¢∫Ë™ç
    echo | openssl s_client -connect "$DOMAIN:443" -servername "$DOMAIN" 2>/dev/null | openssl x509 -noout -dates
}

# „É°„Ç§„É≥Âá¶ÁêÜÂÆüË°å
main() {
    print_message "üöÄ Cloudflare + openSUSE Leap „Çª„ÉÉ„Éà„Ç¢„ÉÉ„ÉóÈñãÂßã"
    
    setup_cloudflare_credentials
    configure_firewall
    setup_apache_virtualhost
    deploy_website_files
    obtain_ssl_certificate
    configure_apache_ssl
    setup_auto_renewal
    test_connections
    
    print_success "üéâ „Çª„ÉÉ„Éà„Ç¢„ÉÉ„ÉóÂÆå‰∫ÜÔºÅ"
    echo
    print_message "üìã „Çª„ÉÉ„Éà„Ç¢„ÉÉ„ÉóÂÆå‰∫ÜÊÉÖÂ†±:"
    echo "üåê „É°„Ç§„É≥„Çµ„Ç§„Éà: https://$DOMAIN"
    echo "üìä „Çπ„ÉÜ„Éº„Çø„Çπ„Éö„Éº„Ç∏: https://$SUBDOMAIN.$DOMAIN"
    echo "üîí SSLË®ºÊòéÊõ∏: Let's Encrypt (90Êó•ÈñìÊúâÂäπ)"
    echo "üîÑ Ëá™ÂãïÊõ¥Êñ∞: ÊØéÊó•ÂçàÂâç3ÊôÇ"
    echo
    print_message "üìù Ê¨°„ÅÆ„Çπ„ÉÜ„ÉÉ„Éó:"
    echo "1. Cloudflare„ÅßSSL/TLSË®≠ÂÆö„Çí 'Full (strict)' „Å´Â§âÊõ¥"
    echo "2. Cloudflare„ÅÆ„Éó„É≠„Ç≠„Ç∑Ôºà„Ç™„É¨„É≥„Ç∏Èõ≤Ôºâ„ÇíÊúâÂäπÂåñÔºàÊé®Â•®Ôºâ"
    echo "3. Cloudflare„ÅßCDN„ÄÅDDoS‰øùË≠∑„ÇíË®≠ÂÆö"
    echo "4. „Çπ„ÉÜ„Éº„Çø„Çπ„Éö„Éº„Ç∏„ÅÆÂãï‰ΩúÁ¢∫Ë™ç"
}

# „Çπ„ÇØ„É™„Éó„ÉàÂÆüË°å
main "$@"
