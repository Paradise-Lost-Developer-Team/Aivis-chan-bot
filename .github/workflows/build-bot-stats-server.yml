name: BuildKit Docker Build

on:
  push:
    branches: ["web"]
  pull_request:
    branches: ["web"]
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  REGISTRY_OWNER: paradise-lost-developer-team
  IMAGE_NAME: bot-stats-server

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver: docker-container
          install: true

      - name: Set up BuildKit environment
        run: |
          # Install BuildKit binaries
          BUILDKIT_VERSION="v0.15.1"
          curl -L "https://github.com/moby/buildkit/releases/download/${BUILDKIT_VERSION}/buildkit-${BUILDKIT_VERSION}.linux-amd64.tar.gz" | sudo tar -xzC /usr/local
          
          # Create buildkit directory with proper permissions
          sudo mkdir -p /run/buildkit
          sudo chmod 755 /run/buildkit
          
          # Ensure clean start - kill any existing buildkitd processes
          sudo pkill -f buildkitd || true
          
          # Start buildkitd daemon with verbose logging
          sudo /usr/local/bin/buildkitd \
            --addr unix:///run/buildkit/buildkitd.sock \
            --root /tmp/buildkit-root \
            --oci-worker=true \
            --containerd-worker=false \
            --debug &
          
          # Wait for buildkitd to start and create socket
          echo "Waiting for BuildKitd to start..."
          timeout=60
          while [ $timeout -gt 0 ]; do
            if [ -S /run/buildkit/buildkitd.sock ]; then
              echo "Socket file found, testing connection..."
              if sudo /usr/local/bin/buildctl --addr unix:///run/buildkit/buildkitd.sock debug workers >/dev/null 2>&1; then
                echo "BuildKitd is ready!"
                break
              fi
            fi
            sleep 2
            timeout=$((timeout - 2))
            echo "Waiting... (${timeout}s remaining)"
          done
          
          if [ $timeout -le 0 ]; then
            echo "BuildKitd failed to start properly"
            echo "Socket exists: $(test -S /run/buildkit/buildkitd.sock && echo yes || echo no)"
            echo "Buildkitd processes:"
            ps aux | grep buildkitd || echo "No buildkitd processes found"
            exit 1
          fi
          
          # Set proper permissions on socket
          sudo chmod 666 /run/buildkit/buildkitd.sock
          echo "BuildKitd setup complete"

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.REGISTRY_OWNER }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build with BuildKit
        run: |
          # Set BUILDKIT_HOST for buildctl
          export BUILDKIT_HOST=unix:///run/buildkit/buildkitd.sock
          
          # Build and push the image
          /usr/local/bin/buildctl build \
            --frontend dockerfile.v0 \
            --local context=. \
            --local dockerfile=. \
            --opt filename=Dockerfile.bot-stats-server \
            --output type=image,name=${{ env.REGISTRY }}/${{ env.REGISTRY_OWNER }}/${{ env.IMAGE_NAME }}:latest,push=true \
            --output type=image,name=${{ env.REGISTRY }}/${{ env.REGISTRY_OWNER }}/${{ env.IMAGE_NAME }}:${{ github.sha }},push=true